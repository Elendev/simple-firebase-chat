{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth !== null",
        ".write": "auth !== null && $uid == auth.uid",
        ".validate": "newData.exists() && newData.hasChildren(['photoURL', 'displayName'])"
      }
    },

    "chatroom-list": {
      "$uid": {
        // only user with $uid can access his chatroom-list
        ".read": "auth !== null && $uid == auth.uid",
        ".write": "auth !== null && $uid == auth.uid",

        // ensure the chatroom added to the chatroom-list exists
        "$chatroom_id": {
          ".validate": "root.child('/chatrooms/' + $chatroom_id).exists()"
        }
      }
    },

    "chatrooms": {
      "$chatroom_id": {
        ".read": "auth !== null",
        ".write": "auth != null && (!data.exists())",
        ".validate": "newData.exists() && newData.hasChildren(['owner']) && $chatroom_id.length > 2 && $chatroom_id.matches(/^[a-zA-Z0-9_-]+$/)",

        "owner": {
          ".validate": "newData.val() == auth.uid"
        },

        "$other": {
          ".validate": "false"
        }
      }
    },

    "chatrooms-messages": {
      "$chatroom_id": {
        ".read": "auth != null",
        ".validate": "root.child('/chatrooms/' + $chatroom_id).exists()",

        "$message_id": {
          ".write": "!data.exists() && newData.exists()",
          ".validate": "newData.hasChildren(['user', 'message', 'timestamp'])",

          "user": {
            ".validate": "newData.val() === auth.uid"
          },

          "message": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },

          "timestamp": {
            ".validate": "newData.val() <= now"
          },

          "$other": {
            ".validate": "false"
          }
        }
      }
    }
  }
}
